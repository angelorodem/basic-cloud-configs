user www-data;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

worker_cpu_affinity     auto;
worker_rlimit_nofile    8192;
worker_processes auto;

events {
	worker_connections 2048;
	use epoll;
}

http {
	# Basic Settings
	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	server_tokens           off;
	server_name_in_redirect off;
	log_not_found           off;
	types_hash_max_size     2048;
	client_max_body_size    64M;

	#Timeouts
	keepalive_timeout           30s;
	client_body_timeout         30s;
	client_header_timeout       30s;
	send_timeout                30s;
	reset_timedout_connection   on;
	proxy_connect_timeout       30s;
	proxy_send_timeout          30s;
	proxy_read_timeout          30s;
	
	#DDoS
	limit_conn_zone $binary_remote_addr zone=perip:10m;
	limit_req_zone  $binary_remote_addr zone=req_limit_per_ip:5m rate=40r/s;
	limit_conn      perip 100;
	limit_req       zone=req_limit_per_ip burst=100 nodelay;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	# SSL Settings
	ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
	ssl_prefer_server_ciphers on;

	# Logging Settings
	log_format  main  '$remote_addr - $remote_user [$time_local] "$host" "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

	error_log /var/log/nginx/error.log;

	#Log only errors
	map $status $loggable {
	    ~^[23] 0;
	    default 1;
	}
	access_log /var/log/nginx/access.log combined if=$loggable buffer=512k flush=1m;
	
	# Gzip Settings
	gzip on;
	gzip_vary on;
	gzip_proxied any;
	gzip_comp_level 6;
	gzip_buffers 16 8k;
	gzip_http_version 1.1;
	gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

	map $http_upgrade $connection_upgrade {
		default     "upgrade";
	}

	#Other Configs
	location ~* \.(?:jpg|jpeg|gif|png|ico|woff2)$ {
		expires 1M;
		add_header Cache-Control "public";
	}

	location ~* \.(?:jpg|jpeg|gif|png|ico|woff2|js|css)$ {
		access_log off;
	}

	location ~ /\.(?!well-known).* {
	    deny all;
	}

	# Remove logging from favicon
	location = /favicon.ico {
	    log_not_found off;
	    access_log    off;
	}

	# Remove loggin from robots
	location = /robots.txt {
	    log_not_found off;
	    access_log    off;
	}

	#VHosts
    	server {
		listen      80 default_server;
		server_name _;
		include     conf.d/elasticbeanstalk/php.conf;

		# rota para o health checker
		location /health {
		    add_header  Content-Type text/plain;
		    return      200 'I am Alive';
		}

		# demais requisições são ignoradas
		location / {
		    return 444;
		}
	}

	include		conf.d/*.conf;
	include		sites-enabled/*;

	# WebServer. Só aceita requests para o domínio 'gdoorpayments.com.br'
	# server {
	# 	listen                  80;
	# 	server_name             .gdoorpayments.com.br;
	# 	access_log              /var/log/nginx/access.log main;
	# 	include                 conf.d/elasticbeanstalk/*.conf;
	# 	fastcgi_read_timeout    300;
	# }

}
