# Turn on execshield
kernel.exec-shield=1

# Makes exploitatation harder
kernel.randomize_va_space=2

# Protect hardlinks
fs.protected_hardlinks=1
fs.protected_symlinks=1

#Reboot after panic
kernel.panic=10

# Controls the System Request debugging functionality of the kernel
kernel.sysrq = 0

#Reduce priority of swap
vm.swappiness = 0

###### SECURITY ######
########## IPv4 networking start ##############
# Send redirects, if router, but this is just server
# So no routing allowed 
net.ipv4.conf.all.send_redirects = 0
net.ipv4.conf.default.send_redirects = 0
 
# Accept packets with SRR option? No
net.ipv4.conf.all.accept_source_route = 0
 
# Accept Redirects? No, this is not router
net.ipv4.conf.all.accept_redirects = 0
net.ipv4.conf.all.secure_redirects = 0
 
# Log packets with impossible addresses to kernel log? yes
net.ipv4.conf.all.log_martians = 1
net.ipv4.conf.default.accept_source_route = 0
net.ipv4.conf.default.accept_redirects = 0
net.ipv4.conf.default.secure_redirects = 0
 
# Ignore all ICMP ECHO and TIMESTAMP requests sent to it via broadcast/multicast
net.ipv4.icmp_echo_ignore_broadcasts = 1
net.ipv4.icmp_ignore_bogus_error_messages=1
 
# Prevent against the common 'syn flood attack'
net.ipv4.tcp_syncookies = 1
net.ipv4.tcp_synack_retries = 5
net.ipv4.tcp_max_syn_backlog = 8192
net.ipv4.tcp_max_tw_buckets = 2000000
 
# Enable source validation by reversed path, as specified in RFC1812
net.ipv4.conf.all.rp_filter = 1
 
# Controls source route verification
net.ipv4.conf.default.rp_filter = 1 

# Controls IP packet forwarding
net.ipv4.ip_forward = 0

# Do not accept source routing
net.ipv4.conf.default.accept_source_route = 0

# Sets whether TCP should reuse an existing connection in the TIME-WAIT
net.ipv4.tcp_tw_reuse = 1

# TCP keepalive is a mechanism for TCP connections that help to determine whether the other end has stopped responding or not.
# TCP will send the keepalive probe that contains null data to the network peer several times after a period of idle time.
# If the peer does not respond, the socket will be closed automatically.
net.ipv4.tcp_keepalive_time = 120
net.ipv4.tcp_keepalive_intvl = 40
net.ipv4.tcp_keepalive_probes = 6

# More Ephemeral ports
net.ipv4.ip_local_port_range = "30000 65535"

# Protect against tcp time-wait assassination 
net.ipv4.tcp_rfc1337 = 1


########## IPv6 networking start ##############
# Number of Router Solicitations to send until assuming no routers are present.
# This is host and not router
net.ipv6.conf.default.router_solicitations = 0
 
# Accept Router Preference in RA?
net.ipv6.conf.default.accept_ra_rtr_pref = 0
 
# Learn Prefix Information in Router Advertisement
net.ipv6.conf.default.accept_ra_pinfo = 0
 
# Setting controls whether the system will accept Hop Limit settings from a router advertisement
net.ipv6.conf.default.accept_ra_defrtr = 0

# Specify how many seconds to wait for a final FIN packet before the socket is forcibly closed. 
# This is strictly a violation of the TCP specification, but required to prevent denial-of-service attacks. In Linux 2.2, the default value was 180
net.ipv4.tcp_fin_timeout = 20

###### PERFORMANCE ######
net.core.netdev_max_backlog = 16384
net.core.somaxconn = 4096

net.core.rmem_default = 1048576
net.core.rmem_max = 16777216
net.core.wmem_default = 1048576
net.core.wmem_max = 16777216
net.core.optmem_max = 65536
net.ipv4.tcp_rmem = 4096 1048576 2097152
net.ipv4.tcp_wmem = 4096 65536 16777216

net.ipv4.udp_rmem_min = 8192
net.ipv4.udp_wmem_min = 8192

net.ipv4.tcp_fastopen = 3

net.ipv4.tcp_slow_start_after_idle = 0

net.ipv4.tcp_mtu_probing = 1
